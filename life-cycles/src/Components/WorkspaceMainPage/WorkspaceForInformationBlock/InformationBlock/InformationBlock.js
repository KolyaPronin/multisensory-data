import { useSelector, useDispatch } from "react-redux";
import { useEffect, useState } from "react";
import styles from './InformationBlock.module.css';

export function InformationBlock() {
  const stepsData = useSelector(s => s.changebleLifeData.steps);
  const notificationsData = useSelector(s => s.changebleLifeData.notifications);
  const heartbeatData = useSelector(s => s.changebleLifeData.heartbeat);
  const currentTimestamp = useSelector(s => s.time.time);

  const [currentSteps, setCurrentSteps] = useState("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö");
  const [currentNotif, setCurrentNotif] = useState("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö");
  const [currentBeat, setCurrentBeat] = useState("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö");

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ —à–∞–≥–æ–≤ –ø–æ timestamp
  const findByTimestamp = (arr, timestamp) => {
    return Array.isArray(arr)
      ? arr.find(item => new Date(item.timestamp).getTime() === new Date(timestamp).getTime())
      : null;
  };

  useEffect(() => {
    //console.log("currentTimestamp:", currentTimestamp); // –õ–æ–≥–∏—Ä—É–µ–º —Ç–µ–∫—É—â–∏–π —Ç–∞–π–º—à—Ç–∞–º–ø

    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º currentTimestamp –≤ Date –æ–±—ä–µ–∫—Ç –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    const currentStepData = findByTimestamp(stepsData, currentTimestamp);
    const currentNotifData = findByTimestamp(notificationsData, currentTimestamp);
    const currentBeatData = findByTimestamp(heartbeatData, currentTimestamp);

    //console.log("–®–∞–≥–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏:", currentStepData); // –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —à–∞–≥–æ–≤

    // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã, –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    setCurrentSteps(currentStepData ? currentStepData.value : "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö");
    setCurrentNotif(currentNotifData ? currentNotifData.value : "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö");
    setCurrentBeat(currentBeatData ? currentBeatData.value : "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö");

  }, [currentTimestamp, stepsData, notificationsData, heartbeatData]); // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ currentTimestamp

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–ª–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
  const formatValue = (value) => {
    if (typeof value === "number") {
      return value.toLocaleString();
    }
    return value;
  };

  return (
    <div className={styles.container}>
      <div className={styles.headerDataContainer}>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</div>
      <div className={styles.cardsWrapper}>
        {/* –ö–∞—Ä—Ç–æ—á–∫–∞ —Å —à–∞–≥–∞–º–∏ */}
        <div className={styles.card}>
          <p className={styles.cardTitle}>üë£ –®–∞–≥–∏</p>
          <p className={styles.cardValue}>
            {formatValue(currentSteps)}
          </p>
        </div>

        {/* –ö–∞—Ä—Ç–æ—á–∫–∞ —Å –ø—É–ª—å—Å–æ–º */}
        <div className={styles.card}>
          <p className={styles.cardTitle}>üíì –ü—É–ª—å—Å</p>
          <p className={styles.cardValue}>
            {typeof currentBeat === "number" ? `${currentBeat} —É–¥/–º–∏–Ω` : currentBeat}
          </p>
        </div>

        {/* –ö–∞—Ä—Ç–æ—á–∫–∞ —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º */}
        <div className={styles.card}>
          <p className={styles.cardTitle}>üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ</p>
          <p className={styles.cardValue}>
            {formatValue(currentNotif)}
          </p>
        </div>
      </div>
    </div>
  );
}
